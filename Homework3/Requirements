Grab a copy of this code, which contains a very simple simulated robot, and an implementation of a 1D Kalman filter.
Run the example code, and verify that it prints out something. The simulated robot is initialized with two variances:
one for movement, and one for sensor readings. These are used to add Gaussian noise to any movement or sensor reading.
Larger values mean more uncertainty. Zero values mean perfect movement or perfect sensing.
The robot moves using the move function, which takes a distance (positive or negative) as an argument.
The Kalman filter is initialized with values for A, B, and C (the movement and sensor model parameters),
R, Q (the variances of the error in movement and sensing), and an initial mean and variance.
You update it using the update function, which takes an action (how far you told the robot to move) and the sensor
reading taken after the movement. The values for these parameters in the example file are wrong.
Fill in some more appropriate values, run the code, and verify that the mean of the filter prediction approaches the
actual position of the robot.

Experiment with a few values of the Kalman filter and robot parameters, until you have a feel for when and how the filter
converges (or doesn't converge). In particular, think about the following questions:
    What happens when the robot has perfect movement and perfect sensing?
    What happens as the variance of the movement and sensor models in the Kalman filter increase?
    What happens when either the movement or the sensor model is incorrect in the Kalman filter?
    For a given pair of robot parameters, what are the optimal parameters in the Kalman filter?
Plot how the filter estimate and the actual robot position differ over time for the various parameter values that you try.
Comment briefly on the plots

Grab an implementation of the Hough Transform, and show how it behaves on a couple of example images. For each image,
show the original image, the Hough space image, and the original image with the lines overlaid on it.
Show at least one image where the Hough transform works well, and one for which it works poorly (or gives odd results).

What to Hand In

A tarball with all of the code you wrote, the images you used, and a PDF document with your plots and discussion. Turn it in to the TEACH web site, as usual.